[tool.poetry]
name = "mloprec"
version = "0.1.0"
description = "MLOps project for recommender systems"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "mloprec"}]

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.24.0"
pandas = "^2.0.0"
scikit-learn = "^1.2.0"
torch = "^2.0.0"
mkdocs-material = "^9.6.12"

[tool.poetry.group.dev.dependencies]
black = "^23.12.0"
ruff = "^0.1.8"
mypy = "^1.8.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I", "B", "W", "C4", "UP", "N", "ANN", "D"]
ignore = ["ANN101", "D203", "D212"]

[tool.ruff.isort]
known-first-party = ["mloprec"]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.poetry.scripts]
mloprec = "mloprec.cli:main"
